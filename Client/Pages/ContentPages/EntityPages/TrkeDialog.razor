@using System.Globalization
@using BaseLibrary.DTOs.EntityDTOs
@using CountryData.Standard
@using BaseLibrary.Entities

<SfDialog Width="350px" IsModal="true" ShowCloseIcon="true" @bind-Visible="IsVisible">

    <DialogEvents OnOpen="OpenDialog"> </DialogEvents>
    <DialogTemplates>
        <Header> @Title Trku </Header>
        <Content>
            <EditForm EditContext="editContext" Enhance OnSubmit="Save">
                <DataAnnotationsValidator />
                <div class="card border-success">
                    <div class="card-body">
                        <div class="form-group">
                            <label class="form-label">Naziv</label>
                            <InputText @bind-Value="Trka.Naziv" class="form-control" />
                            <ValidationMessage For="@(() => Trka.Naziv)" />
                            <label class="form-label">Broj krugova</label>
                            <InputNumber @bind-Value="Trka.BrojKrugova" class="form-control" />
                            <ValidationMessage For="@(() => Trka.BrojKrugova)" />
                            <label class="form-label">Datum</label>
                            <InputDate @bind-Value="Trka.DatumTrke" class="form-control" />
                            <ValidationMessage For="@(() => Trka.DatumTrke)" />
                            <label class="form-label">Kategorija</label>
                            <select class="form-control" @bind="Trka.Kategorija.Id">
                                @foreach (var kategorija in Kategorije)
                                {
                                    <option value="@kategorija.Id">@kategorija.NazivKategorije</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
            </EditForm>
        </Content>
    </DialogTemplates>

    <DialogButtons>
        <DialogButton Content="SAVE" Type="ButtonType.Submit" IsPrimary="true" @onclick="Save" />
    </DialogButtons>

</SfDialog>


@code{
    [Parameter] public TrkaDTO Trka{ get; set; } = new();
    [Parameter] public EventCallback<TrkaDTO> HandleSaveOperationEvent { get; set; }
    private bool IsVisible { get; set; } = false;
    public string Title { get; set; } = "Dodaj";
    private EditContext editContext;
    private bool isFormValid = false;
    public List<Kategorija> Kategorije { get; set; } = new();

    protected async override void OnInitialized()
    {
        Kategorije = await kategorijaService.GetAll(Constants.KategorijaBaseUrl);
    }

    public void OpenDialog()
    {
        IsVisible = true;
        StateHasChanged();
        editContext = new EditContext(Trka);
    }

    async void Save()
    {
        if (!editContext.Validate())
            await dialogService.AlertAsync("Forma nije ispravna.", "Upozorenje");
        else{
            Console.WriteLine("werererwerer");
            Console.WriteLine(Trka.Kategorija is null);
            Trka.Kategorija.NazivKategorije = Kategorije.FirstOrDefault(k => k.Id == Trka.Kategorija.Id).NazivKategorije;
            await HandleSaveOperationEvent.InvokeAsync(Trka);
            Trka.Kategorija = new KategorijaDTO { Id = Kategorije.First().Id};
        }
    }

    public void ChangeTitle(string title)
    {
        Title = title;
    }
}