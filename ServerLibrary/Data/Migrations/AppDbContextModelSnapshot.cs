// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerLibrary.Data;

#nullable disable

namespace ServerLibrary.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BaseLibrary.Entities.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Kategorija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NazivKategorije")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangListaID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrkaID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kategorije");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Plasman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrojPoena")
                        .HasColumnType("int");

                    b.Property<int>("RangListaID")
                        .HasColumnType("int");

                    b.Property<int>("VozacID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RangListaID");

                    b.HasIndex("VozacID");

                    b.ToTable("Plasmani");
                });

            modelBuilder.Entity("BaseLibrary.Entities.RangLista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KategorijaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("KrajSezone")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlasmanID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KategorijaId");

                    b.ToTable("RangListe");
                });

            modelBuilder.Entity("BaseLibrary.Entities.RefreshTokenInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RefreshTokenInfos");
                });

            modelBuilder.Entity("BaseLibrary.Entities.SystemRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SystemRoles");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Trka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrojKrugova")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumTrke")
                        .HasColumnType("datetime2");

                    b.Property<int>("KategorijaId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Staza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrkaId")
                        .HasColumnType("int");

                    b.Property<string>("UcinakId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VozacId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VozacId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KategorijaId");

                    b.HasIndex("TrkaId");

                    b.HasIndex("VozacId1");

                    b.ToTable("Trke");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Ucinak", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Plasman")
                        .HasColumnType("int");

                    b.Property<int>("StartnaPozicija")
                        .HasColumnType("int");

                    b.Property<int>("TrkaID")
                        .HasColumnType("int");

                    b.Property<int>("VozacID")
                        .HasColumnType("int");

                    b.Property<string>("Vremena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TrkaID");

                    b.HasIndex("VozacID");

                    b.ToTable("Ucinci");
                });

            modelBuilder.Entity("BaseLibrary.Entities.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Vozac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Drzava")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlasmanID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrkaId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UcinakId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vozaci");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Plasman", b =>
                {
                    b.HasOne("BaseLibrary.Entities.RangLista", "RangLista")
                        .WithMany("Plasman")
                        .HasForeignKey("RangListaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BaseLibrary.Entities.Vozac", "Vozac")
                        .WithMany("Plasman")
                        .HasForeignKey("VozacID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RangLista");

                    b.Navigation("Vozac");
                });

            modelBuilder.Entity("BaseLibrary.Entities.RangLista", b =>
                {
                    b.HasOne("BaseLibrary.Entities.Kategorija", "Kategorija")
                        .WithMany("RangLista")
                        .HasForeignKey("KategorijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategorija");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Trka", b =>
                {
                    b.HasOne("BaseLibrary.Entities.Kategorija", "Kategorija")
                        .WithMany("Trka")
                        .HasForeignKey("KategorijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BaseLibrary.Entities.Trka", null)
                        .WithMany("Vozac")
                        .HasForeignKey("TrkaId");

                    b.HasOne("BaseLibrary.Entities.Vozac", null)
                        .WithMany("Trka")
                        .HasForeignKey("VozacId1");

                    b.Navigation("Kategorija");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Ucinak", b =>
                {
                    b.HasOne("BaseLibrary.Entities.Trka", "Trka")
                        .WithMany("Ucinak")
                        .HasForeignKey("TrkaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BaseLibrary.Entities.Vozac", "Vozac")
                        .WithMany("Ucinak")
                        .HasForeignKey("VozacID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trka");

                    b.Navigation("Vozac");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Kategorija", b =>
                {
                    b.Navigation("RangLista");

                    b.Navigation("Trka");
                });

            modelBuilder.Entity("BaseLibrary.Entities.RangLista", b =>
                {
                    b.Navigation("Plasman");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Trka", b =>
                {
                    b.Navigation("Ucinak");

                    b.Navigation("Vozac");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Vozac", b =>
                {
                    b.Navigation("Plasman");

                    b.Navigation("Trka");

                    b.Navigation("Ucinak");
                });
#pragma warning restore 612, 618
        }
    }
}
